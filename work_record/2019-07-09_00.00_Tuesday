# This document records daily work and other log infomation.

2019/7/8 23.33 Tuesday

.WORK_PLAN
    1.验证一下cpu占用率高的修改情况，主要涉及到garp(锁)、firmware_init(锁)、psec_init(sleep)、critd_module_init(注释掉)
    2.查找mac保存的方法，之前是用树存储的。
    目前虚拟内存的使用率也是很高。
    
.STUDY_PLAN
    1.<8.30-8.50><unix环境编程.PDF> by my phone.
    2.<12.30-13.00>学习linux设备树文件相关。
    3.<13.00-14.00>sleep
    4.<15.00-18.00>学习强国文章、视频学习。
    5.<18.00-20.30>根据work完成情况，未完成则继续work。解决昨天晚上写的Q1-3问题，并记录
    6.<21.30-22.00>小崽子视频
    7.<22.30-23.00>在家记录一天的completion和summary，以及新一天plan，提交至github。
    8.<23.10-24.00>如果想玩的话，LOL和虎牙。不想玩就洗洗上床玩会儿手机。也没啥电影看。
    9.<24.00-01.00>玩或者睡觉。
    除学习任务，其他时间点可能不太会变，晚上时间可能不准，但是7必须要做，其他娱乐可自由安排一些。
    
.WORK_COMPLETION
    
.STUDY_COMPLETION
    1.昨天看了dup复制描述符。
    
.SUMMARY
    对于昨天l3web代码的疑问解答记录：
    Q1：cookie在那一步骤设置
    答：fcgi只维护了cookie中的sessionid、maxage等，web前端维护username、user_type等。fcgi的cook设置在session处理中刷新session时候设置sessionid和maxage。web前端在login页面设置lang、color信息，在index页面设置username、user_type信息。
    Q2：sessionlist中的session空间问题。
    答：问题本身就有问题，serverlist为fcgi存储session结构的全局结构，httpd过来的数据存储在req变量中，在session阶段，创建一个新的sessionid，会将req的session指针指向新创建的session，该session保存在sessinlist全局结构中。
    Q3：退出后cookie中仍有username、user_type。
    答：可参考Q1，有web前端控制，在logout之后没有清除cookie，可能和浏览器有关。
    1.linux remove删除文件或目录，它调用unlink和rmdir，分别对应文件和目录。调用后使文件的链接计数减1，仍能通过文件的其他链接访问文件，链接计数为0，则删除该文件。这些都是正常的东西，需要注意的是下面一句话：只要有进程打开了该文件，那么该文件就不会被删除，即使此时链接计数器为0.关闭一个文件时，内核首先去检测此时有多少个进程打开了这个文件，之后在去检测该文件的链接计数器是否为0，如果是0，在删除。
    一个小的应用，在程序中可能会创建临时文件，我们在打开临时文件之后，马上调用remove，就能保证该临时文件一定会被删除，即使进程在之后的处理过程中崩溃，而且因为文件已经open，所以还可以进行读取或其他操作，直到close或进程崩溃。
    2.linux fprintf 格式化输出到文件流中 fgets 从流中读取一行 fputs 输出一行到流中。
        这里的流，对于文件来说就是FILE *指针，特殊的系统相关的：stdio标准输入流，stdout标准输出流，stderr标准出错流(默认打印到终端)。
    
    
    
    
    
