# This document records daily work and other log infomation.

2019/7/17 22.48 Tuesday

.WORK_PLAN
    1.完成mirror其他的工作，删除无用的代码，看看web要不要改
    2.聚合模块是个一直以来的大问题，先看看分析一下吧。
    
.STUDY_PLAN
    1.<8.30-8.50><unix环境编程.PDF> by my phone. 
    2.<12.30-13.00>看看自制操作系统这本书，在深入理解一下操作系统都是怎么工作的。
    3.<13.00-14.00>sleep
    4.<15.00-18.00>学习强国文章、视频学习。
    5.<18.00-20.30>根据work完成情况，未完成则继续work。完成的话，vlan，还可以看一下L3的脚本，看看启动顺序到底是怎么样的，这个捋一下。
    6.<21.30-22.00>小崽子视频
    7.<22.30-23.00>在家记录一天的completion和summary，以及新一天plan，提交至github。
    8.<23.10-24.00>如果想玩的话，LOL和虎牙。不想玩就洗洗上床玩会儿手机。也没啥电影看。
    9.<24.00-01.00>玩或者睡觉。
    除学习任务，其他时间点可能不太会变，晚上时间可能不准，但是7必须要做，其他娱乐可自由安排一些。
    
.WORK_COMPLETION
    
.STUDY_COMPLETION
    
.SUMMARY
    聚合配置cpssDxChTrunkDesignatedPortsEntrySet配置多端口时指定一个转发端口，给每个索引配置一个转发端口列表，之后哈希算法会去选择指定端口列表进行转发。
    1.再谈进程的exit：终止状态与退出状态(我喜欢叫退出码)
    之前学习到exit会执行atexit注册的退出函数，以及io冲洗，今天我们将exit与进程关联记起来。一个进程调用return、exit等方式结束自己的运行周期，那么，该进程会返回其终止状态，而不是返回return的参数。这里就要区分出终止状态和返回状态。
    waitpid相关函数，在父进程中调用，之后阻塞等待子进程的退出，如果父进程不等待，那么结束掉的子进程将进入僵死态，因为没有父进程回收它的结束状态资源。waitpid相关函数中有一个int型参数statloc，为结果参数，其中保存了进程的终止状态信息，可以使用宏来判断进程是否正常终止，还是异常终止。还有两个韩式wait3、wait4，可以获取子进程所使用的资源统计信息。
    其他的没有了，今天验证了镜像，发现在镜像目的端口并不是独立的，而是在镜像的过程中也参与自身的转发，不像v2r7之前的代码，可能可以配置，也可能是受限于芯片。之后聚合的话，也是一直遗留的问题，不会负载分担，今天好像摸到点门道了，找到了一点问题的所在，推测还是和non-trunk和DesignatePortTable相关，明天去在看看他和哈希的关系，然后在验证验证，marvell的命令行实现是使用了低级模式，明天也先按低级 来配，主要就是配trunk和DesignatePortTable，默认是所有端口都在这里，应该配成，他是那个口可以转发的组合列表，在看一下entryIndex到底是有几个。
    今天到最后，发现的是，哈希算法会根据默认的目的mac，计算哈希值去匹配entryIndex，所以一个index，就代表一种可以由哪些端口转发的规则。还有一个问题就是，在验证过程中发现，打入聚合组学到的mac，他也没转发，这个明天也要在验证一下。
