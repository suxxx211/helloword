# This document records daily work and other log infomation.

2019/7/25 22.52 Thursday

.WORK_PLAN
    1.继续分析验证直连状态下，三层转发为什么不通。主要重点在当前版本，换一个电脑，分不删除vlan1，和删除vlan1验证。
    
.STUDY_PLAN
    1.<8.30-8.50><unix环境编程.PDF> by my phone. 
    2.<12.30-13.00>看看自制操作系统这本书，在深入理解一下操作系统都是怎么工作的。
    3.<13.00-14.00>sleep
    4.<15.00-18.00>学习强国文章、视频学习。
    5.<18.00-20.30>根据work完成情况，未完成则继续work。完成的话，vlan，还可以看一下L3的脚本，看看启动顺序到底是怎么样的，这个捋一下。
    6.<21.30-22.00>小崽子视频
    7.<22.30-23.00>在家记录一天的completion和summary，以及新一天plan，提交至github。
    8.<23.10-24.00>如果想玩的话，LOL和虎牙。不想玩就洗洗上床玩会儿手机。也没啥电影看。
    9.<24.00-01.00>玩或者睡觉。
    除学习任务，其他时间点可能不太会变，晚上时间可能不准，但是7必须要做，其他娱乐可自由安排一些。
    
.WORK_COMPLETION
    
.STUDY_COMPLETION
    
.SUMMARY
    1.Linux文件记录锁
        进程在关闭文件描述符的同时，会关闭这个打开的文件上的所有记录锁。也就是说，进程中打开了一个filepath多次，或者调用了dup相关函数，在close任意一个文件描述符时，会关闭这个文件的所有的记录锁，不关心是那个文件描述符的。
        子进程继承父进程的文件描述符，但是不会继承父进程的文件记录锁。子进程需要调用fctl来获取该文件的记录锁。
        在调用exec相关函数时，exec执行的程序会继承源程序的锁，这个可以通过文件标志位close-on-exec来控制在执行exec相关函数时，是否关闭原程序打开的文件描述符。
        疑问：1.同一进程打开同一个文件多次，或调用了dup相关的函数，在close任意一个时，会关闭这个文件的记录锁，那么会怎么处理其他的打开这个文件的描述符呢？
        答：这个好像也没法验证。。open一个文件，进程就会产生一个文件表项，那么我的理解就是，close一个open打开的文件描述符，有独立的文件偏移量等，对其他open打开的文件描述符没有影响，关闭就关闭了。对于dup相关函数，他是复制了文件描述符，那么，在该进程中这个dup出来的文件描述符指向相同的文件表项，此时关闭应该是把文件描述符减一了。
