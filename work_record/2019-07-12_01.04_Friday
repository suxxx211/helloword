# This document records daily work and other log infomation.

2019/7/12 01.04 Friday

.WORK_PLAN
    1.在验证一下mac的显示，不保存了。但是要保证每次都能查到不会出错。
    2.分析解决lldp的问题，1启动时读配置失败2不会发包
    
.STUDY_PLAN
    1.<8.30-8.50><unix环境编程.PDF> by my phone.
    2.<12.30-13.00>学习linux设备树文件相关。
    3.<13.00-14.00>sleep
    4.<15.00-18.00>学习强国文章、视频学习。
    5.<18.00-20.30>根据work完成情况，未完成则继续work。完成的话，继续看看设备树文件和，vlan，还可以看一下L3的脚本，看看启动顺序到底是怎么样的。
    6.<21.30-22.00>小崽子视频
    7.<22.30-23.00>在家记录一天的completion和summary，以及新一天plan，提交至github。
    8.<23.10-24.00>如果想玩的话，LOL和虎牙。不想玩就洗洗上床玩会儿手机。也没啥电影看。
    9.<24.00-01.00>玩或者睡觉。
    除学习任务，其他时间点可能不太会变，晚上时间可能不准，但是7必须要做，其他娱乐可自由安排一些。
    
.WORK_COMPLETION
    1.MAC没怎么看，但是现在能打印出来，就没再很追究了，但是还是要确认这个状态变化的时间。
    2.LLDP修改完成，并且合入。遗留问题：entry显示时，端口号显示为aggr，这个和aggr模块的isid有关，需要修改aggr模块。
    
.STUDY_COMPLETION
    1.还是看了进程环境这些，后面的练习题看了一半，还得再看一下。
    2.没有看
    3.完成
    4.完成
    5.继续工作了，然后看了一点pcl相关的底层的东西
    6.完成
    7.一直等到周一上午12.46才完成。周末都没写
    
.SUMMARY
    cookie原理，对了，这个放在这但是没写，周五晚上分析了重放攻击的东西，遇到问题调试起来有点费劲，他把输入输出都重定向了，所以不能用printf了，但是好歹调试好了，明天还是得把这些东西补充一下，要不然以后光忘了。其实也就是1.在status的时候加了时间戳，并记录在server的sessionList中，再返回给了前端。2.前端用密码和时间戳进行计算出一个新密码，发送给server。3.server收到后用自己保存的时间戳和密码计算出真实的密码，与server的密码比较，看看是不是正确。登录成功的话，将server的sessionList中保存的时间戳清零。如果重放攻击(Replay Attacks)发生，他用抓到的之前前端登录成功的密码发给server，此时server中此session的时间戳已经被改变，所以是不能通过验证的。我也觉得其实也不那么安全。。前端status后获取一个server给他的盐值也好，时间戳也好，它必定在脚本中对这个值进行计算，但是这个过程是透明的，我抓到你的status和login的包，以及原网页中的js计算，我就能知道你是怎么加密的，其实感觉重放攻击的关键是在于，能不能获取到正常用户登录成功后，server把加的盐值改成了什么，如果只到这个，那么我们将修改抓到的login请求，重放给server，一定能实现登陆成功。但是这只是对于我自己的这个网站，其他的没看，可能人家有先进的办法，还有就是https，不知道怎么用。
    然后周末两条，一天学习了shell脚本的编写，以及configure的使用，把fcgi工程化。另一天学习makefile的编写，完成了webfcgi的工程化，但是还有不足，makefile是一个强大的工具。
    
