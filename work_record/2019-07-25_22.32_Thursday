# This document records daily work and other log infomation.

2019/7/25 22.32 Thursday

.WORK_PLAN
    1.继续分析验证直连状态下，三层转发为什么不通。主要重点在当前版本，换一个电脑，分不删除vlan1，和删除vlan1验证。
    
.STUDY_PLAN
    1.<8.30-8.50><unix环境编程.PDF> by my phone. 
    2.<12.30-13.00>看看自制操作系统这本书，在深入理解一下操作系统都是怎么工作的。
    3.<13.00-14.00>sleep
    4.<15.00-18.00>学习强国文章、视频学习。
    5.<18.00-20.30>根据work完成情况，未完成则继续work。完成的话，vlan，还可以看一下L3的脚本，看看启动顺序到底是怎么样的，这个捋一下。
    6.<21.30-22.00>小崽子视频
    7.<22.30-23.00>在家记录一天的completion和summary，以及新一天plan，提交至github。
    8.<23.10-24.00>如果想玩的话，LOL和虎牙。不想玩就洗洗上床玩会儿手机。也没啥电影看。
    9.<24.00-01.00>玩或者睡觉。
    除学习任务，其他时间点可能不太会变，晚上时间可能不准，但是7必须要做，其他娱乐可自由安排一些。
    
.WORK_COMPLETION
    1.搞通了，和代码没关系，但是不能说代码没问题。
    
.STUDY_COMPLETION
    1.看了文件的共享
    2.没有看
    3.完成
    4.完成
    5.继续学习ospf相关内容
    6.完成
    7.完成
    
.SUMMARY
    1.Linux文件记录锁
        进程在关闭文件描述符的同时，会关闭这个打开的文件上的所有记录锁。也就是说，进程中打开了一个filepath多次，或者调用了dup相关函数，在close任意一个文件描述符时，会关闭这个文件的该进程的所有的记录锁，不关心是那个文件描述符的。
        子进程继承父进程的文件描述符，指向同一个文件表项意味着共享偏移量(和dup一样)，但是不会继承父进程的文件记录锁。子进程需要调用fctl来获取该文件的记录锁。
        在调用exec相关函数时，exec执行的程序会继承源程序的锁，这个可以通过文件标志位close-on-exec来控制在执行exec相关函数时，是否关闭原程序打开的文件描述符。
        疑问：1.同一进程打开同一个文件多次，或调用了dup相关的函数，在close任意一个时，会关闭这个文件的记录锁，那么会怎么处理其他的打开这个文件的描述符呢？
        答：这个好像也没法验证。。open一个文件，进程就会产生一个文件表项，那么我的理解就是，close一个open打开的文件描述符，有独立的文件偏移量等，对其他open打开的文件描述符没有影响，关闭就关闭了。对于dup相关函数，他是复制了文件描述符，那么，在该进程中这个dup出来的文件描述符指向相同的文件表项，此时关闭应该是把文件描述符减一了。
    2.设备三层转发配置注意，端口只配置在一个vlan中，之后记得配置端口的pvid为该vlanid。
    今天把三层转发的配置好了，之后准备开始看isis，发现这个资料确实不多，华为那个网站上也没讲，只有igp只有ospf的，看了一个isis写的，是在是理解起来有点问题，感觉都没讲到重点，分析一个协议，不先得弄清楚他要干啥功能的，使用场景，之后既然isis也定义了那么多的报文种类，那么肯定也会有角色的转变，状态机的转换，应该讲这个，像华为讲osfp这样，对吧，什么时候该发什么样的报文，状态在什么时候会转变，分析的清清楚楚，我觉得能写出来这个的人，是在是对协议理解的深刻，还有就是rfc文档，全英文的，看起来是不怎么好看，但是如果能看下来，肯定对自己的帮助很大，尽快把ospf看的差不多，之后再分析isis，感觉应该会有一些贯通的地方吧。ospf的正常状态下的状态机还是要理解的。
    3.ospf状态机正常理想情况下的状态改变流程分析
    1.路由器加入网络，首先发送不带DR的hello报文，进入init状态。如果收到相邻路由器的hello报文，判断报文中是否有自己的router id，没有，就说明对端没有把自己加入它的邻居中，此时还是init状态，直达收到的邻居报文中有自己，说明对端路由器已经识别自己了，很开心，转变状态为2-way。
    2.这1阶段还有要注意的是DR的选举，在init阶段有一个Timer，如果该Timer超时前，收到的hello报文中有DR、BDR说明此时网络中已经有DR、BDR了，新加的路由器服从DR、BDR，不进行选举。正常情况下，DR\BDR角色由首先加入网络的两台路由器获得。
    3.新加的路由器判断建立双向通信的邻居是不是DR，如果是，说明要与DR建立邻接关系，此时进入Exstart状态。如果不是DR，那么就保持邻居关系，状态为2-way，开心的成为了隔壁老王。
    4.start说明是开始，开始什么呢？就是开始和DR进行协商，协商谁是Master，谁是Slave，这个M来确定发送DD报文的序号，发一个序号就加一，确认完成后，进入Exchange状态。
    5.change状态，开始发DD报文，这个DD报文中包含了，路由器自己的LSDB，也就是LSA的汇总，这里包含的实际是LSDB的概要信息，发给对端，供对端来看看说，我需要哪一个信息，如果一看，你发来的我这都有，这个路由器就膨胀了，你个小垃圾，你的我都有，看我多厉害，嘲讽一下，然后开心的进入Full状态，完成了自己的邻接关系的建立。如果一看，卧槽，你这有几个我没有，不行呀，我不平衡，得想想怎么把那些没有的搞过来，马上让自己进入Loading状态。
    6.1.Loding状态，5中说，看到DD中有我自己没有的LSA，心理不平衡了，就给邻居(DR)发送LSR报文，里面说，大佬，我这不行呀，你有几个LSA我没有，你赶紧发给我吧，要不然我不就废了。邻居(DR)一收到LSR报文一看，心理想，你个弱智，来来大哥发给你，拉你一把，记得给我发红包，88.8都行。然后邻居(DR)再看看LSR里面都要哪几个LSA，然后将这几个LSA封装进LSU报文中发给，LSR请求方。
    6.2.Loading状态，路由器收到LSU一看，里面有自己刚刚LSR请求的LSA，开心一下，老子也全了，又一看，这个邻居(DR)说还要红包，有点生气，帮点忙，就要红包，但是不给又不行，万一下回我这没有了，问他要他不给我，我不是又废了，没办法，和气生财，给他发一个吧，这时构造LSACK报文，说，老哥，真是三克油，你这真是帮了我的大忙了(客套一下，哼，凡人)，这是老弟我给你的大红包8.88，你收好。发完，自己进入Full状态，完成整个Loading状态转换。
    7.邻居收到LSACK一看，这下老弟真抠。。然后完成了邻接关系的建立，大家在一起愉快的玩耍。
    至此理想正常状态下状态机转换完成，但是还有有很多小细节的。先这样，然后在学习。
    

    
